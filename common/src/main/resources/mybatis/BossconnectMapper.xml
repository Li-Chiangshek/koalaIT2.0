<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.koalaIT.common.mapper.BossconnectMapper" >
  <resultMap id="BaseResultMap" type="com.koalaIT.common.model.Bossconnect" >
    <id column="number" property="number" jdbcType="INTEGER" />
    <result column="boss_id" property="bossId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="check" property="check" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    `number`, boss_id, user_id, `check`
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.koalaIT.common.model.BossconnectExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bossconnect
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bossconnect
    where `number` = #{number,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bossconnect
    where `number` = #{number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.koalaIT.common.model.BossconnectExample" >
    delete from bossconnect
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.koalaIT.common.model.Bossconnect" >
    insert into bossconnect (`number`, boss_id, user_id,
      check)
    values (#{number,jdbcType=INTEGER}, #{bossId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{check,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.koalaIT.common.model.Bossconnect" >
    insert into bossconnect
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="number != null" >
        `number`,
      </if>
      <if test="bossId != null" >
        boss_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="check != null" >
        `check`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="bossId != null" >
        #{bossId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="check != null" >
        #{check,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.koalaIT.common.model.BossconnectExample" resultType="java.lang.Integer" >
    select count(*) from bossconnect
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bossconnect
    <set >
      <if test="record.number != null" >
        `number` = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.bossId != null" >
        boss_id = #{record.bossId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.check != null" >
        `check` = #{record.check,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bossconnect
    set `number` = #{record.number,jdbcType=INTEGER},
      boss_id = #{record.bossId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      `check` = #{record.check,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.koalaIT.common.model.Bossconnect" >
    update bossconnect
    <set >
      <if test="bossId != null" >
        boss_id = #{bossId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="check != null" >
        `check` = #{check,jdbcType=INTEGER},
      </if>
    </set>
    where `number` = #{number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.koalaIT.common.model.Bossconnect" >
    update bossconnect
    set boss_id = #{bossId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      `check` = #{check,jdbcType=INTEGER}
    where `number` = #{number,jdbcType=INTEGER}
  </update>
  <select id="findBossByID" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select `user`.user_name,bossconnect.*,boss.boss_title,boss.price,boss.orderhunter,`checkconnect`.state

    from  koalait.boss,koalait.user,koalait.checkconnect,koalait.bossconnect
    where bossconnect.check=checkconnect.check and bossconnect.user_id=`user`.user_id and bossconnect.boss_id=boss.boss_id and `boss`.user_id=#{userId,jdbcType=INTEGER}
  </select>
  <update id="addCheck" parameterType="com.koalaIT.common.model.Bossconnect" >
    update `koalait`.`bossconnect`
    set check = #{check,jdbcType=INTEGER}
    where boss_id = #{bossId,jdbcType=INTEGER} and user_id = #{userId,jdbcType=INTEGER}
  </update>
  <delete id="delBossConnect" parameterType="java.lang.Integer" >
    delete from bossconnect
    where boss_id = #{bossId,jdbcType=INTEGER}, user_id = #{userId,jdbcType=INTEGER}
  </delete>
</mapper>